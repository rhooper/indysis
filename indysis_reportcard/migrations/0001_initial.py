# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2018-10-02 20:37
from __future__ import unicode_literals

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('studentdb', '0002_auto_20180909_2218'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GradingScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('percentile', models.BooleanField(default=False)),
                ('range_heading', models.CharField(blank=True, max_length=255)),
                ('range_heading_en', models.CharField(blank=True, max_length=255, null=True)),
                ('range_heading_fr', models.CharField(blank=True, max_length=255, null=True)),
                ('descr_heading', models.CharField(blank=True, max_length=255)),
                ('descr_heading_en', models.CharField(blank=True, max_length=255, null=True)),
                ('descr_heading_fr', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GradingSchemeLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('sortorder', models.PositiveIntegerField(default=0)),
                ('range', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('gradingscheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='indysis_reportcard.GradingScheme')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GradingSchemeLevelChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('sortorder', models.PositiveIntegerField(default=0)),
                ('choice', models.CharField(max_length=8)),
                ('name', models.CharField(blank=True, max_length=40, null=True)),
                ('name_en', models.CharField(blank=True, max_length=40, null=True)),
                ('name_fr', models.CharField(blank=True, max_length=40, null=True)),
                ('description', models.CharField(blank=True, max_length=80, null=True)),
                ('description_en', models.CharField(blank=True, max_length=80, null=True)),
                ('description_fr', models.CharField(blank=True, max_length=80, null=True)),
                ('view_fullname', models.BooleanField(default=False, help_text='Use the name instead of the choice code when reviewing entries.')),
                ('gradingschemelevel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='indysis_reportcard.GradingSchemeLevel')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('locked', models.BooleanField(default=False)),
                ('emailed', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='studentdb.Student')),
            ],
        ),
        migrations.CreateModel(
            name='ReportCardAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
            ],
        ),
        migrations.CreateModel(
            name='ReportCardEditorTracking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('edit_type', models.CharField(blank=True, max_length=64, null=True)),
                ('last_ping', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='studentdb.Student')),
            ],
        ),
        migrations.CreateModel(
            name='ReportCardEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('percentile', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='Mark')),
                ('comment', models.TextField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('choice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='indysis_reportcard.GradingSchemeLevelChoice', verbose_name='Mark')),
                ('reportcard', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='indysis_reportcard.ReportCard')),
            ],
        ),
        migrations.CreateModel(
            name='ReportCardSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('sortorder', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(max_length=255)),
                ('heading', models.CharField(blank=True, max_length=255)),
                ('heading_en', models.CharField(blank=True, max_length=255, null=True)),
                ('heading_fr', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.TextField(blank=True, max_length=255)),
                ('text_en', models.TextField(blank=True, max_length=255, null=True)),
                ('text_fr', models.TextField(blank=True, max_length=255, null=True)),
                ('comments_area', models.BooleanField(default=False)),
                ('comments_heading', models.TextField(blank=True)),
                ('comments_heading_en', models.TextField(blank=True, null=True)),
                ('comments_heading_fr', models.TextField(blank=True, null=True)),
                ('field_code', models.CharField(blank=True, help_text='Prefix for fields in Document template', max_length=20)),
                ('gradingscheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='indysis_reportcard.GradingScheme')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportCardStrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('sortorder', models.PositiveIntegerField(default=0)),
                ('text', models.TextField(blank=True)),
                ('text_en', models.TextField(blank=True, null=True)),
                ('text_fr', models.TextField(blank=True, null=True)),
                ('comments_area', models.BooleanField(default=False)),
                ('graded', models.BooleanField(default=True)),
                ('field_code', models.CharField(blank=True, help_text='Prefix for fields in Document template', max_length=20)),
                ('rc_language', models.CharField(choices=[('en', 'English'), ('fr', 'French')], default='en', max_length=8)),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportCardSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('sortorder', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('name_en', models.CharField(blank=True, max_length=255, null=True)),
                ('name_fr', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.TextField(blank=True)),
                ('text_en', models.TextField(blank=True, null=True)),
                ('text_fr', models.TextField(blank=True, null=True)),
                ('comments_area', models.BooleanField(default=True)),
                ('graded', models.BooleanField(default=False)),
                ('field_code', models.CharField(blank=True, help_text='Prefix for fields in Document template', max_length=20)),
                ('rc_language', models.CharField(choices=[('en', 'English'), ('fr', 'French')], default='en', max_length=8)),
                ('page_break_after', models.BooleanField(default=False)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='indysis_reportcard.ReportCardSection')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportCardSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('completed', models.BooleanField(default=False)),
                ('reportcard', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='indysis_reportcard.ReportCard')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='studentdb.Faculty')),
            ],
        ),
        migrations.CreateModel(
            name='ReportCardTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('interim', models.BooleanField(default=False)),
                ('coverpage_template', models.TextField(blank=True, null=True)),
                ('header_template', models.TextField(blank=True, null=True)),
                ('footer_template', models.TextField(blank=True, null=True)),
                ('body_template', models.TextField(blank=True, null=True)),
                ('grades', models.ManyToManyField(blank=True, to='studentdb.GradeLevel')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportCardTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_open', models.BooleanField(default=True)),
                ('interim', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, default='', max_length=80)),
                ('name_en', models.CharField(blank=True, default='', max_length=80, null=True)),
                ('name_fr', models.CharField(blank=True, default='', max_length=80, null=True)),
                ('submission_deadline', models.DateTimeField(blank=True, null=True, verbose_name='Due to Administration')),
                ('review_deadline', models.DateTimeField(blank=True, null=True, verbose_name='Revision Deadline')),
                ('delivery_date', models.DateTimeField(blank=True, null=True)),
                ('shortcode', models.CharField(blank=True, help_text='Short code for fields in Document template (eg t1)', max_length=20)),
                ('number', models.PositiveIntegerField(default=1)),
                ('displabel', models.CharField(default='1', max_length=20)),
                ('email_subject_template', models.TextField(default='{{ rc.term.name_en }} Report Card / {{ rc.term.name_fr }} Bulletin: {{ rc.student.longname }}')),
                ('email_body_template', models.TextField(default='The report card for {{ rc.student.longname }} is attached.')),
                ('school_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentdb.SchoolYear')),
                ('templates', models.ManyToManyField(blank=True, to='indysis_reportcard.ReportCardTemplate')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentdb.Term')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportCardYearGradeContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('content', ckeditor.fields.RichTextField()),
                ('grade_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentdb.GradeLevel')),
                ('school_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentdb.SchoolYear')),
            ],
            options={
                'verbose_name': 'Static Report Card Content',
                'verbose_name_plural': 'Static Report Card Content',
            },
        ),
        migrations.AddField(
            model_name='reportcardstrand',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='indysis_reportcard.ReportCardSubject'),
        ),
        migrations.AddField(
            model_name='reportcardsection',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='indysis_reportcard.ReportCardTemplate'),
        ),
        migrations.AddField(
            model_name='reportcardentry',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='indysis_reportcard.ReportCardSection'),
        ),
        migrations.AddField(
            model_name='reportcardentry',
            name='strand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='indysis_reportcard.ReportCardStrand'),
        ),
        migrations.AddField(
            model_name='reportcardentry',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='indysis_reportcard.ReportCardSubject'),
        ),
        migrations.AddField(
            model_name='reportcardeditortracking',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='indysis_reportcard.ReportCardSubject'),
        ),
        migrations.AddField(
            model_name='reportcardeditortracking',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='editor_locks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reportcardaccess',
            name='section',
            field=models.ForeignKey(blank=True, help_text='Choose one of Subject or Section', null=True, on_delete=django.db.models.deletion.CASCADE, to='indysis_reportcard.ReportCardSection'),
        ),
        migrations.AddField(
            model_name='reportcardaccess',
            name='subject',
            field=models.ForeignKey(blank=True, help_text='Choose one of Subject or Section', null=True, on_delete=django.db.models.deletion.CASCADE, to='indysis_reportcard.ReportCardSubject'),
        ),
        migrations.AddField(
            model_name='reportcardaccess',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentdb.Faculty'),
        ),
        migrations.AddField(
            model_name='reportcardaccess',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentdb.GradeLevel'),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='indysis_reportcard.ReportCardTemplate'),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='indysis_reportcard.ReportCardTerm'),
        ),
        migrations.AlterUniqueTogether(
            name='reportcardsubmission',
            unique_together=set([('teacher', 'reportcard')]),
        ),
        migrations.AlterUniqueTogether(
            name='reportcardentry',
            unique_together=set([('reportcard', 'section', 'subject', 'strand')]),
        ),
        migrations.AlterUniqueTogether(
            name='reportcardeditortracking',
            unique_together=set([('user', 'student', 'subject')]),
        ),
        migrations.AlterUniqueTogether(
            name='reportcardaccess',
            unique_together=set([('user', 'year', 'section', 'subject')]),
        ),
        migrations.AlterUniqueTogether(
            name='reportcard',
            unique_together=set([('student', 'term', 'template')]),
        ),
    ]
